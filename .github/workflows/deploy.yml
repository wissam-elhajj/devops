name: Build and Deploy Angular App to IIS

on:
  push:
    branches:
      - master  # Trigger deployment on push to the main branch

jobs:
  build:
    runs-on: windows-latest  # or use windows-latest if you want to use Windows Runner

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2  # Checkout the repository

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'  # Set the Node.js version you want to use

    - name: Install Dependencies
      run: npm install  # Install Angular dependencies

    - name: Build Angular App
      run: npm run build --prod  # Build the Angular app for production

    - name: Archive Build Files
      run: |
        mkdir -p build-artifacts
        cp -r dist/* build-artifacts/  # Copy build output to a new folder

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: angular-build
        path: build-artifacts/  # Upload the build artifacts to GitHub
        
    - name: List uploaded artifacts
      run: |
        echo "Listing artifacts uploaded in this job:"
        ls -R build-artifacts/    

    # Download the build artifact
    - name: Download Angular Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: angular-build
        path: build-artifacts/angular-build

    # Deploy the artifact to IIS Server
    - name: Deploy to IIS
      run: |
        # Make sure to replace with your actual IIS server details
        $server_ip = '108.181.161.179'
        $username = 'administrator'
        $password = '@hgTuw$564'
        $target_path = 'C:\IRIS5\site.cicd'
        $Build_Path = './angular-build'
        
        # Deploy the artifact using PowerShell via WinRM or any other method
        $credential = New-Object System.Management.Automation.PSCredential ($username, (ConvertTo-SecureString $password -AsPlainText -Force))

        # Use Invoke-Command with -ArgumentList to pass $Build_Path to the remote session
        Invoke-Command -ComputerName $server_ip -Credential $credential -ScriptBlock {
            param (
                $Build_Path,  # Accept Build_Path as a parameter
                $target_path  # Accept target_path as a parameter
            )
            
            # Clean the existing directory on IIS
            Remove-Item -Recurse -Force $target_path\*

            # Copy new build files to IIS folder
            Copy-Item -Recurse -Force $Build_Path\* $target_path
        } -ArgumentList $Build_Path, $target_path

      env:
        Build_Path: ./angular-build  # Local path to the downloaded artifact